@model IEnumerable<Models.Domain.Schedule>

@{
    ViewData["Title"] = "CourseScheduleList";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<script>
    $(document).ready(function () {
        var jqq = jQuery.noConflict();
        jqq("#CourseId").change(function () {
            var selectedValue = $(this).val();
            $.ajax({
                url: '/Module/LoadSchedule',
                type: 'POST',
                dataType: 'html',
                data: { courseId: selectedValue },
                success: function (response) {
                    alert(response);
                    jqq('#scheduleList').empty();
                    jqq('#scheduleList').append(response);
                },
                error: function (xhr, status, error) {
                    console.log(error)
                }
            });
        });
        var jq = jQuery.noConflict();
        jq('.example').dateAndTime();

    });
</script>


<h1>Course Schedule </h1>
<div class="row">
@*     <div class="col-md-6">
    @Html.DropDownList("DepartmentId", new SelectList(ViewBag.Departments, "Id", "Name"), "-- Select Department --", new { @class = "form-control" })
    </div> *@
    <div class="col-md-6">
        @Html.DropDownList("CourseId", new SelectList(ViewBag.CourseList, "Id", "Name"), "-- Select Course --", new { @class = "form-control" })
    </div>
</div>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div class="container mt-5">
    <h2>Select Date Range:</h2>
    <form>
        <div class="form-group">
            <label for="from">From:</label>
            <p><input class="example" type="text" name="jQueryScript" value=""></p>
        </div>
        <div class="form-group">
            <label for="to">To:</label>
            <p><input class="example" type="text" name="jQueryScript" value=""></p>
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
</div>
<div id="scheduleList">
<table class="table">
    <thead>
        <tr>
            <th>
               Module
            </th>
            <th>
                @Html.DisplayNameFor(model => model.From)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.To)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseModule.Name)
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.From)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.To)
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id  })
            </td>
        </tr>
}
    </tbody>
</table>
</div>